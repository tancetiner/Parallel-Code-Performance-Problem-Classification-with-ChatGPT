#ifndef __OPENMM_OPENCLSORT_H__ #define __OPENMM_OPENCLSORT_H__ #include "OpenCLArray.h" #include "OpenCLContext.h" #include "windowsExportOpenCL.h" namespace OpenMM { class OPENMM_EXPORT_OPENCL OpenCLSort { public: class SortTrait; OpenCLSort(OpenCLContext& context, SortTrait* trait, unsigned int length); ~OpenCLSort(); void sort(OpenCLArray& data); private: OpenCLContext& context; SortTrait* trait; OpenCLArray dataRange; OpenCLArray bucketOfElement; OpenCLArray offsetInBucket; OpenCLArray bucketOffset; OpenCLArray buckets; cl::Kernel shortListKernel, shortList2Kernel, computeRangeKernel, assignElementsKernel, computeBucketPositionsKernel, copyToBucketsKernel, sortBucketsKernel; unsigned int dataLength, rangeKernelSize, positionsKernelSize, sortKernelSize; bool isShortList; }; class OpenCLSort::SortTrait { public: virtual ~SortTrait() { } virtual int getDataSize() const = 0; virtual int getKeySize() const = 0; virtual const char* getDataType() const = 0; virtual const char* getKeyType() const = 0; virtual const char* getMinKey() const = 0; virtual const char* getMaxKey() const = 0; virtual const char* getMaxValue() const = 0; virtual const char* getSortKey() const = 0; }; } #endif