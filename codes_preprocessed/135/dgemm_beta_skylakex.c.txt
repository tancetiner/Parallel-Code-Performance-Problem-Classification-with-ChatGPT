#include "common.h" #include <immintrin.h> int CNAME(BLASLONG m, BLASLONG n, BLASLONG dummy1, FLOAT beta, FLOAT *dummy2, BLASLONG dummy3, FLOAT *dummy4, BLASLONG dummy5, FLOAT *c, BLASLONG ldc){ BLASLONG i, j; FLOAT *c_offset1, *c_offset; FLOAT ctemp1, ctemp2, ctemp3, ctemp4; FLOAT ctemp5, ctemp6, ctemp7, ctemp8; if (m == ldc && (unsigned long)beta == (unsigned long)ZERO) { memset(c, 0, m * n * sizeof(FLOAT)); return 0; } if (m == 0 || n == 0) return 0; c_offset = c; if (beta == ZERO){ __m512d z_zero; z_zero = _mm512_setzero_pd(); j = n; do { c_offset1 = c_offset; c_offset += ldc; i = m; while (i >= 32) { _mm512_storeu_pd(c_offset1, z_zero); _mm512_storeu_pd(c_offset1 + 8, z_zero); _mm512_storeu_pd(c_offset1 + 16, z_zero); _mm512_storeu_pd(c_offset1 + 24 , z_zero); c_offset1 += 32; i -= 32; } while (i >= 8) { _mm512_storeu_pd(c_offset1, z_zero); c_offset1 += 8; i -= 8; } while (i > 0) { *c_offset1 = ZERO; c_offset1 ++; i --; } j --; } while (j > 0); } else { j = n; do { c_offset1 = c_offset; c_offset += ldc; i = (m >> 3); if (i > 0){ do { ctemp1 = *(c_offset1 + 0); ctemp2 = *(c_offset1 + 1); ctemp3 = *(c_offset1 + 2); ctemp4 = *(c_offset1 + 3); ctemp5 = *(c_offset1 + 4); ctemp6 = *(c_offset1 + 5); ctemp7 = *(c_offset1 + 6); ctemp8 = *(c_offset1 + 7); ctemp1 *= beta; ctemp2 *= beta; ctemp3 *= beta; ctemp4 *= beta; ctemp5 *= beta; ctemp6 *= beta; ctemp7 *= beta; ctemp8 *= beta; *(c_offset1 + 0) = ctemp1; *(c_offset1 + 1) = ctemp2; *(c_offset1 + 2) = ctemp3; *(c_offset1 + 3) = ctemp4; *(c_offset1 + 4) = ctemp5; *(c_offset1 + 5) = ctemp6; *(c_offset1 + 6) = ctemp7; *(c_offset1 + 7) = ctemp8; c_offset1 += 8; i --; } while (i > 0); } i = (m & 7); if (i > 0){ do { ctemp1 = *c_offset1; ctemp1 *= beta; *c_offset1 = ctemp1; c_offset1 ++; i --; } while (i > 0); } j --; } while (j > 0); } return 0; };