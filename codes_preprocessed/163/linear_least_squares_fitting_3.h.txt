#ifndef CGAL_LINEAR_LEAST_SQUARES_FITTING_3_H #define CGAL_LINEAR_LEAST_SQUARES_FITTING_3_H #include <CGAL/basic.h> #include <CGAL/Object.h> #include <CGAL/Algebraic_structure_traits.h> #include <CGAL/IO/io.h> #include <CGAL/linear_least_squares_fitting_points_3.h> #include <CGAL/linear_least_squares_fitting_segments_3.h> #include <CGAL/linear_least_squares_fitting_triangles_3.h> #include <CGAL/linear_least_squares_fitting_cuboids_3.h> #include <CGAL/linear_least_squares_fitting_tetrahedra_3.h> #include <CGAL/linear_least_squares_fitting_spheres_3.h> #include <CGAL/Dimension.h> #include <iterator> #include <list> #include <string> namespace CGAL { template < typename InputIterator, typename Object, typename Kernel, typename Tag > inline typename Kernel::FT linear_least_squares_fitting_3(InputIterator first, InputIterator beyond, Object& object, typename Kernel::Point_3& centroid, const Tag& tag, const Kernel& kernel) { typedef typename std::iterator_traits<InputIterator>::value_type Value_type; return internal::linear_least_squares_fitting_3(first, beyond, object, centroid, (Value_type*) NULL, kernel, tag); } template < typename InputIterator, typename Object, typename Point, typename Tag> inline typename Kernel_traits<Object>::Kernel::FT linear_least_squares_fitting_3(InputIterator first, InputIterator beyond, Object& object, Point& centroid, const Tag& tag) { typedef typename std::iterator_traits<InputIterator>::value_type Value_type; typedef typename Kernel_traits<Value_type>::Kernel Kernel; return CGAL::linear_least_squares_fitting_3(first,beyond,object,centroid,tag,Kernel()); } template < typename InputIterator, typename Object, typename Tag> inline typename Kernel_traits<Object>::Kernel::FT linear_least_squares_fitting_3(InputIterator first, InputIterator beyond, Object& object, const Tag& tag) { typedef typename std::iterator_traits<InputIterator>::value_type Value_type; typedef typename Kernel_traits<Value_type>::Kernel Kernel; typename Kernel::Point_3 centroid; return CGAL::linear_least_squares_fitting_3(first,beyond,object,centroid,tag); } } #endif